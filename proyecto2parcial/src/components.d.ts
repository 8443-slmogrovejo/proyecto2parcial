/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CalificacionPeli {
    }
    interface EventoClick {
    }
    interface KeyupEscape {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface ScrollP {
    }
    interface ScrollS {
    }
    interface TextoSnacks {
    }
    interface ToggleButton {
    }
}
export interface EventoClickCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLEventoClickElement;
}
declare global {
    interface HTMLCalificacionPeliElement extends Components.CalificacionPeli, HTMLStencilElement {
    }
    var HTMLCalificacionPeliElement: {
        prototype: HTMLCalificacionPeliElement;
        new (): HTMLCalificacionPeliElement;
    };
    interface HTMLEventoClickElement extends Components.EventoClick, HTMLStencilElement {
    }
    var HTMLEventoClickElement: {
        prototype: HTMLEventoClickElement;
        new (): HTMLEventoClickElement;
    };
    interface HTMLKeyupEscapeElement extends Components.KeyupEscape, HTMLStencilElement {
    }
    var HTMLKeyupEscapeElement: {
        prototype: HTMLKeyupEscapeElement;
        new (): HTMLKeyupEscapeElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLScrollPElement extends Components.ScrollP, HTMLStencilElement {
    }
    var HTMLScrollPElement: {
        prototype: HTMLScrollPElement;
        new (): HTMLScrollPElement;
    };
    interface HTMLScrollSElement extends Components.ScrollS, HTMLStencilElement {
    }
    var HTMLScrollSElement: {
        prototype: HTMLScrollSElement;
        new (): HTMLScrollSElement;
    };
    interface HTMLTextoSnacksElement extends Components.TextoSnacks, HTMLStencilElement {
    }
    var HTMLTextoSnacksElement: {
        prototype: HTMLTextoSnacksElement;
        new (): HTMLTextoSnacksElement;
    };
    interface HTMLToggleButtonElement extends Components.ToggleButton, HTMLStencilElement {
    }
    var HTMLToggleButtonElement: {
        prototype: HTMLToggleButtonElement;
        new (): HTMLToggleButtonElement;
    };
    interface HTMLElementTagNameMap {
        "calificacion-peli": HTMLCalificacionPeliElement;
        "evento-click": HTMLEventoClickElement;
        "keyup-escape": HTMLKeyupEscapeElement;
        "my-component": HTMLMyComponentElement;
        "scroll-p": HTMLScrollPElement;
        "scroll-s": HTMLScrollSElement;
        "texto-snacks": HTMLTextoSnacksElement;
        "toggle-button": HTMLToggleButtonElement;
    }
}
declare namespace LocalJSX {
    interface CalificacionPeli {
    }
    interface EventoClick {
        "onCustomClick"?: (event: EventoClickCustomEvent<void>) => void;
    }
    interface KeyupEscape {
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface ScrollP {
    }
    interface ScrollS {
    }
    interface TextoSnacks {
    }
    interface ToggleButton {
    }
    interface IntrinsicElements {
        "calificacion-peli": CalificacionPeli;
        "evento-click": EventoClick;
        "keyup-escape": KeyupEscape;
        "my-component": MyComponent;
        "scroll-p": ScrollP;
        "scroll-s": ScrollS;
        "texto-snacks": TextoSnacks;
        "toggle-button": ToggleButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "calificacion-peli": LocalJSX.CalificacionPeli & JSXBase.HTMLAttributes<HTMLCalificacionPeliElement>;
            "evento-click": LocalJSX.EventoClick & JSXBase.HTMLAttributes<HTMLEventoClickElement>;
            "keyup-escape": LocalJSX.KeyupEscape & JSXBase.HTMLAttributes<HTMLKeyupEscapeElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "scroll-p": LocalJSX.ScrollP & JSXBase.HTMLAttributes<HTMLScrollPElement>;
            "scroll-s": LocalJSX.ScrollS & JSXBase.HTMLAttributes<HTMLScrollSElement>;
            "texto-snacks": LocalJSX.TextoSnacks & JSXBase.HTMLAttributes<HTMLTextoSnacksElement>;
            "toggle-button": LocalJSX.ToggleButton & JSXBase.HTMLAttributes<HTMLToggleButtonElement>;
        }
    }
}
